from numpy import *


def alpha_x_r1(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_x*kr*l/(d**2*r1) + k_x*kr*x_0/(d**2*r1) - k_x*kr*x_0/(d**2*r0) + k_x*l*x_0/(d**2*r1) + k_x*r0**2/(d**2*r1) - k_x*r0/d**2 + k_y*kr*y_0/(d**2*r1) - k_y*kr*y_0/(d**2*r0) + k_y*l*y_0/(d**2*r1) + k_z*kr*z_0/(d**2*r1) - k_z*kr*z_0/(d**2*r0) - kr*l/(d**2*r1) - kr*x_0/(d**2*r1) + kr*x_0/(d**2*r0) - l*x_0/(d**2*r1) - r0**2/(d**2*r1) + r0/d**2 - z_0**2/(d**2*r1) + z_0*z_1/(d**2*r1)
    
def alpha_y_r1(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_x*kr*x_0/(d**2*r1) - k_x*kr*x_0/(d**2*r0) + k_x*l*x_0/(d**2*r1) + k_y*kr*l/(d**2*r1) + k_y*kr*y_0/(d**2*r1) - k_y*kr*y_0/(d**2*r0) + k_y*l*y_0/(d**2*r1) + k_y*r0**2/(d**2*r1) - k_y*r0/d**2 + k_z*kr*z_0/(d**2*r1) - k_z*kr*z_0/(d**2*r0) - kr*l/(d**2*r1) - kr*y_0/(d**2*r1) + kr*y_0/(d**2*r0) - l*y_0/(d**2*r1) - r0**2/(d**2*r1) + r0/d**2 - z_0**2/(d**2*r1) + z_0*z_1/(d**2*r1)
    
def alpha_z_r1(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_x*kr*x_0/(d**2*r1) - k_x*kr*x_0/(d**2*r0) + k_x*l*x_0/(d**2*r1) + k_y*kr*y_0/(d**2*r1) - k_y*kr*y_0/(d**2*r0) + k_y*l*y_0/(d**2*r1) + k_z*kr*z_0/(d**2*r1) - k_z*kr*z_0/(d**2*r0) + k_z*r0**2/(d**2*r1) - k_z*r0/d**2 - kr*l/(d**2*r1) - 2*kr*z_0/(d**2*r1) + kr*z_1/(d**2*r1) + kr*z_0/(d**2*r0) - l*z_0/(d**2*r1) - r0**2/(d**2*r1) + r0/d**2 - z_0**2/(d**2*r1) + z_0*z_1/(d**2*r1)



def alpha_x_r2(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_x/r1**2 - k_x/r0**2 - 1/r1**2 + r0**(-2) + k_x*kr**2/(d**2*r1**2) - k_x*kr**2/(d**2*r0**2) + k_x*kr*l/(d**2*r1**2) + k_x*kr*x_0/(d**2*r1**2) - k_x*kr*x_0/(d**2*r0**2) + k_x*l*x_0/(d**2*r1**2) + k_y*kr*y_0/(d**2*r1**2) - k_y*kr*y_0/(d**2*r0**2) + k_y*l*y_0/(d**2*r1**2) + k_z*kr*z_0/(d**2*r1**2) - k_z*kr*z_0/(d**2*r0**2) - kr**2/(d**2*r1**2) + kr**2/(d**2*r0**2) - kr*l/(d**2*r1**2) - kr*x_0/(d**2*r1**2) + kr*x_0/(d**2*r0**2) - l*x_0/(d**2*r1**2) - z_0**2/(d**2*r1**2) + z_0*z_1/(d**2*r1**2) - k_x*kr*atan(kr/d)/d**3 + k_x*kr*atan(kr/d + l/d)/d**3 - k_x*x_0*atan(kr/d)/d**3 + k_x*x_0*atan(kr/d + l/d)/d**3 - k_y*y_0*atan(kr/d)/d**3 + k_y*y_0*atan(kr/d + l/d)/d**3 - k_z*z_0*atan(kr/d)/d**3 + k_z*z_0*atan(kr/d + l/d)/d**3 + kr*atan(kr/d)/d**3 - kr*atan(kr/d + l/d)/d**3 + x_0*atan(kr/d)/d**3 - x_0*atan(kr/d + l/d)/d**3
    
def alpha_y_r2(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_y/r1**2 - k_y/r0**2 - 1/r1**2 + r0**(-2) + k_x*kr*x_0/(d**2*r1**2) - k_x*kr*x_0/(d**2*r0**2) + k_x*l*x_0/(d**2*r1**2) + k_y*kr**2/(d**2*r1**2) - k_y*kr**2/(d**2*r0**2) + k_y*kr*l/(d**2*r1**2) + k_y*kr*y_0/(d**2*r1**2) - k_y*kr*y_0/(d**2*r0**2) + k_y*l*y_0/(d**2*r1**2) + k_z*kr*z_0/(d**2*r1**2) - k_z*kr*z_0/(d**2*r0**2) - kr**2/(d**2*r1**2) + kr**2/(d**2*r0**2) - kr*l/(d**2*r1**2) - kr*y_0/(d**2*r1**2) + kr*y_0/(d**2*r0**2) - l*y_0/(d**2*r1**2) - z_0**2/(d**2*r1**2) + z_0*z_1/(d**2*r1**2) - k_x*x_0*atan(kr/d)/d**3 + k_x*x_0*atan(kr/d + l/d)/d**3 - k_y*kr*atan(kr/d)/d**3 + k_y*kr*atan(kr/d + l/d)/d**3 - k_y*y_0*atan(kr/d)/d**3 + k_y*y_0*atan(kr/d + l/d)/d**3 - k_z*z_0*atan(kr/d)/d**3 + k_z*z_0*atan(kr/d + l/d)/d**3 + kr*atan(kr/d)/d**3 - kr*atan(kr/d + l/d)/d**3 + y_0*atan(kr/d)/d**3 - y_0*atan(kr/d + l/d)/d**3
    
def alpha_z_r2(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_z/r1**2 - k_z/r0**2 - 1/r1**2 + r0**(-2) + k_x*kr*x_0/(d**2*r1**2) - k_x*kr*x_0/(d**2*r0**2) + k_x*l*x_0/(d**2*r1**2) + k_y*kr*y_0/(d**2*r1**2) - k_y*kr*y_0/(d**2*r0**2) + k_y*l*y_0/(d**2*r1**2) + k_z*kr**2/(d**2*r1**2) - k_z*kr**2/(d**2*r0**2) + k_z*kr*z_0/(d**2*r1**2) - k_z*kr*z_0/(d**2*r0**2) - kr**2/(d**2*r1**2) + kr**2/(d**2*r0**2) - kr*l/(d**2*r1**2) - 2*kr*z_0/(d**2*r1**2) + kr*z_1/(d**2*r1**2) + kr*z_0/(d**2*r0**2) - l*z_0/(d**2*r1**2) - z_0**2/(d**2*r1**2) + z_0*z_1/(d**2*r1**2) - k_x*x_0*atan(kr/d)/d**3 + k_x*x_0*atan(kr/d + l/d)/d**3 - k_y*y_0*atan(kr/d)/d**3 + k_y*y_0*atan(kr/d + l/d)/d**3 - k_z*kr*atan(kr/d)/d**3 + k_z*kr*atan(kr/d + l/d)/d**3 - k_z*z_0*atan(kr/d)/d**3 + k_z*z_0*atan(kr/d + l/d)/d**3 + kr*atan(kr/d)/d**3 - kr*atan(kr/d + l/d)/d**3 + z_0*atan(kr/d)/d**3 - z_0*atan(kr/d + l/d)/d**3


def alpha_x_r4(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_x/r1**4 - k_x/r0**4 - 1/r1**4 + r0**(-4) + k_x*kr**2/(d**2*r1**4) - k_x*kr**2/(d**2*r0**4) + k_x*kr*l/(d**2*r1**4) + k_x*kr*x_0/(d**2*r1**4) - k_x*kr*x_0/(d**2*r0**4) + k_x*l*x_0/(d**2*r1**4) + k_y*kr*y_0/(d**2*r1**4) - k_y*kr*y_0/(d**2*r0**4) + k_y*l*y_0/(d**2*r1**4) + k_z*kr*z_0/(d**2*r1**4) - k_z*kr*z_0/(d**2*r0**4) - kr**2/(d**2*r1**4) + kr**2/(d**2*r0**4) - kr*l/(d**2*r1**4) - kr*x_0/(d**2*r1**4) + kr*x_0/(d**2*r0**4) - l*x_0/(d**2*r1**4) - z_0**2/(d**2*r1**4) + z_0*z_1/(d**2*r1**4) + (3/2)*k_x*kr**2/(d**4*r1**2) - 3/2*k_x*kr**2/(d**4*r0**2) + (3/2)*k_x*kr*l/(d**4*r1**2) + (3/2)*k_x*kr*x_0/(d**4*r1**2) - 3/2*k_x*kr*x_0/(d**4*r0**2) + (3/2)*k_x*l*x_0/(d**4*r1**2) + (3/2)*k_y*kr*y_0/(d**4*r1**2) - 3/2*k_y*kr*y_0/(d**4*r0**2) + (3/2)*k_y*l*y_0/(d**4*r1**2) + (3/2)*k_z*kr*z_0/(d**4*r1**2) - 3/2*k_z*kr*z_0/(d**4*r0**2) - 3/2*kr**2/(d**4*r1**2) + (3/2)*kr**2/(d**4*r0**2) - 3/2*kr*l/(d**4*r1**2) - 3/2*kr*x_0/(d**4*r1**2) + (3/2)*kr*x_0/(d**4*r0**2) - 3/2*l*x_0/(d**4*r1**2) - 3/2*z_0**2/(d**4*r1**2) + (3/2)*z_0*z_1/(d**4*r1**2) - 3/2*k_x*kr*atan(kr/d)/d**5 + (3/2)*k_x*kr*atan(kr/d + l/d)/d**5 - 3/2*k_x*x_0*atan(kr/d)/d**5 + (3/2)*k_x*x_0*atan(kr/d + l/d)/d**5 - 3/2*k_y*y_0*atan(kr/d)/d**5 + (3/2)*k_y*y_0*atan(kr/d + l/d)/d**5 - 3/2*k_z*z_0*atan(kr/d)/d**5 + (3/2)*k_z*z_0*atan(kr/d + l/d)/d**5 + (3/2)*kr*atan(kr/d)/d**5 - 3/2*kr*atan(kr/d + l/d)/d**5 + (3/2)*x_0*atan(kr/d)/d**5 - 3/2*x_0*atan(kr/d + l/d)/d**5
    
def alpha_y_r4(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_y/r1**4 - k_y/r0**4 - 1/r1**4 + r0**(-4) + k_x*kr*x_0/(d**2*r1**4) - k_x*kr*x_0/(d**2*r0**4) + k_x*l*x_0/(d**2*r1**4) + k_y*kr**2/(d**2*r1**4) - k_y*kr**2/(d**2*r0**4) + k_y*kr*l/(d**2*r1**4) + k_y*kr*y_0/(d**2*r1**4) - k_y*kr*y_0/(d**2*r0**4) + k_y*l*y_0/(d**2*r1**4) + k_z*kr*z_0/(d**2*r1**4) - k_z*kr*z_0/(d**2*r0**4) - kr**2/(d**2*r1**4) + kr**2/(d**2*r0**4) - kr*l/(d**2*r1**4) - kr*y_0/(d**2*r1**4) + kr*y_0/(d**2*r0**4) - l*y_0/(d**2*r1**4) - z_0**2/(d**2*r1**4) + z_0*z_1/(d**2*r1**4) + (3/2)*k_x*kr*x_0/(d**4*r1**2) - 3/2*k_x*kr*x_0/(d**4*r0**2) + (3/2)*k_x*l*x_0/(d**4*r1**2) + (3/2)*k_y*kr**2/(d**4*r1**2) - 3/2*k_y*kr**2/(d**4*r0**2) + (3/2)*k_y*kr*l/(d**4*r1**2) + (3/2)*k_y*kr*y_0/(d**4*r1**2) - 3/2*k_y*kr*y_0/(d**4*r0**2) + (3/2)*k_y*l*y_0/(d**4*r1**2) + (3/2)*k_z*kr*z_0/(d**4*r1**2) - 3/2*k_z*kr*z_0/(d**4*r0**2) - 3/2*kr**2/(d**4*r1**2) + (3/2)*kr**2/(d**4*r0**2) - 3/2*kr*l/(d**4*r1**2) - 3/2*kr*y_0/(d**4*r1**2) + (3/2)*kr*y_0/(d**4*r0**2) - 3/2*l*y_0/(d**4*r1**2) - 3/2*z_0**2/(d**4*r1**2) + (3/2)*z_0*z_1/(d**4*r1**2) - 3/2*k_x*x_0*atan(kr/d)/d**5 + (3/2)*k_x*x_0*atan(kr/d + l/d)/d**5 - 3/2*k_y*kr*atan(kr/d)/d**5 + (3/2)*k_y*kr*atan(kr/d + l/d)/d**5 - 3/2*k_y*y_0*atan(kr/d)/d**5 + (3/2)*k_y*y_0*atan(kr/d + l/d)/d**5 - 3/2*k_z*z_0*atan(kr/d)/d**5 + (3/2)*k_z*z_0*atan(kr/d + l/d)/d**5 + (3/2)*kr*atan(kr/d)/d**5 - 3/2*kr*atan(kr/d + l/d)/d**5 + (3/2)*y_0*atan(kr/d)/d**5 - 3/2*y_0*atan(kr/d + l/d)/d**5

def alpha_z_r4(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return k_z/r1**4 - k_z/r0**4 - 1/r1**4 + r0**(-4) + k_x*kr*x_0/(d**2*r1**4) - k_x*kr*x_0/(d**2*r0**4) + k_x*l*x_0/(d**2*r1**4) + k_y*kr*y_0/(d**2*r1**4) - k_y*kr*y_0/(d**2*r0**4) + k_y*l*y_0/(d**2*r1**4) + k_z*kr**2/(d**2*r1**4) - k_z*kr**2/(d**2*r0**4) + k_z*kr*z_0/(d**2*r1**4) - k_z*kr*z_0/(d**2*r0**4) - kr**2/(d**2*r1**4) + kr**2/(d**2*r0**4) - kr*l/(d**2*r1**4) - 2*kr*z_0/(d**2*r1**4) + kr*z_1/(d**2*r1**4) + kr*z_0/(d**2*r0**4) - l*z_0/(d**2*r1**4) - z_0**2/(d**2*r1**4) + z_0*z_1/(d**2*r1**4) + (3/2)*k_x*kr*x_0/(d**4*r1**2) - 3/2*k_x*kr*x_0/(d**4*r0**2) + (3/2)*k_x*l*x_0/(d**4*r1**2) + (3/2)*k_y*kr*y_0/(d**4*r1**2) - 3/2*k_y*kr*y_0/(d**4*r0**2) + (3/2)*k_y*l*y_0/(d**4*r1**2) + (3/2)*k_z*kr**2/(d**4*r1**2) - 3/2*k_z*kr**2/(d**4*r0**2) + (3/2)*k_z*kr*z_0/(d**4*r1**2) - 3/2*k_z*kr*z_0/(d**4*r0**2) - 3/2*kr**2/(d**4*r1**2) + (3/2)*kr**2/(d**4*r0**2) - 3/2*kr*l/(d**4*r1**2) - 3*kr*z_0/(d**4*r1**2) + (3/2)*kr*z_1/(d**4*r1**2) + (3/2)*kr*z_0/(d**4*r0**2) - 3/2*l*z_0/(d**4*r1**2) - 3/2*z_0**2/(d**4*r1**2) + (3/2)*z_0*z_1/(d**4*r1**2) - 3/2*k_x*x_0*atan(kr/d)/d**5 + (3/2)*k_x*x_0*atan(kr/d + l/d)/d**5 - 3/2*k_y*y_0*atan(kr/d)/d**5 + (3/2)*k_y*y_0*atan(kr/d + l/d)/d**5 - 3/2*k_z*kr*atan(kr/d)/d**5 + (3/2)*k_z*kr*atan(kr/d + l/d)/d**5 - 3/2*k_z*z_0*atan(kr/d)/d**5 + (3/2)*k_z*z_0*atan(kr/d + l/d)/d**5 + (3/2)*kr*atan(kr/d)/d**5 - 3/2*kr*atan(kr/d + l/d)/d**5 + (3/2)*z_0*atan(kr/d)/d**5 - 3/2*z_0*atan(kr/d + l/d)/d**5

def alpha_x_quadrupole(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return -3/8*d_x*d_z*k_z/r1**5 + (3/8)*d_x*d_z*k_z/r0**5 + (9/8)*d_x*k_z**2*x_0/r1**5 - 9/8*d_x*k_z**2*x_0/r0**5 - 5/4*d_x*k_z*z_0/r1**5 - 5/8*d_x*k_z*z_1/r1**5 + (15/8)*d_x*k_z*z_0/r0**5 + (9/8)*d_y*k_z**2*y_0/r1**5 - 9/8*d_y*k_z**2*y_0/r0**5 + (3/8)*d_z**2/r1**5 - 3/8*d_z**2/r0**5 + (9/8)*d_z*k_z**2*z_0/r1**5 - 9/8*d_z*k_z**2*z_0/r0**5 - 3/4*d_z*k_z*x_0/r1**5 + (3/4)*d_z*k_z*x_0/r0**5 + (7/8)*d_z*z_0/r1**5 + (5/8)*d_z*z_1/r1**5 - 3/2*d_z*z_0/r0**5 - k_x*k_z**2*r0**2/r1**5 + k_x*k_z**2/r0**3 + (9/8)*k_x*k_z*x_0*z_0/r1**5 + (15/8)*k_x*k_z*x_0*z_1/r1**5 - 3*k_x*k_z*x_0*z_0/r0**5 + (1/2)*k_x/r1**3 - 1/4*k_x*z_0**2/r1**5 + (5/4)*k_x*z_0*z_1/r1**5 - 5/2*k_x*z_1**2/r1**5 - 1/2*k_x/r0**3 + (3/2)*k_x*z_0**2/r0**5 + (9/8)*k_y*k_z*y_0*z_0/r1**5 + (15/8)*k_y*k_z*y_0*z_1/r1**5 - 3*k_y*k_z*y_0*z_0/r0**5 - 1/8*k_z**2*r0**2/r1**5 - k_z**2/r1**3 + (9/8)*k_z**2*z_0**2/r1**5 + (15/8)*k_z**2*z_0*z_1/r1**5 + (9/8)*k_z**2/r0**3 - 3*k_z**2*z_0**2/r0**5 + (5/4)*k_z*x_0*z_0/r1**5 - 5/4*k_z*x_0*z_1/r1**5 - 1/2/r1**3 - z_0**2/r1**5 - 15/8*z_0*z_1/r1**5 + (5/2)*z_1**2/r1**5 + (1/2)/r0**3 + (3/8)*z_0**2/r0**5 + (3/8)*d_x*d_z**2*kr/(d**2*r1**5) - 3/8*d_x*d_z**2*kr/(d**2*r0**5) + (3/8)*d_x*d_z**2*l/(d**2*r1**5) + (9/8)*d_x*d_z**2*x_0/(d**2*r1**5) - 9/8*d_x*d_z**2*x_0/(d**2*r0**5) - 9/8*d_x*d_z*k_z*l*x_0/(d**2*r1**5) - 9/8*d_x*d_z*k_z*r0**2/(d**2*r1**5) + (9/8)*d_x*d_z*k_z/(d**2*r0**3) + (3/2)*d_x*d_z*kr*z_0/(d**2*r1**5) - 3/2*d_x*d_z*kr*z_0/(d**2*r0**5) + (3/2)*d_x*d_z*l*z_0/(d**2*r1**5) + (3/4)*d_x*d_z*x_0*z_0/(d**2*r1**5) - 3/4*d_x*d_z*x_0*z_0/(d**2*r0**5) + (9/8)*d_x*k_z**2*l*r0**2/(d**2*r1**5) + (3/8)*d_x*k_z**2*r0**2*x_0/(d**2*r1**5) - 3/8*d_x*k_z**2*x_0/(d**2*r0**3) - 15/8*d_x*k_z*l*x_0*z_0/(d**2*r1**5) + (3/8)*d_x*k_z*r0**2*z_0/(d**2*r1**5) - 3/8*d_x*k_z*z_0/(d**2*r0**3) - 1/2*d_x*kr/(d**2*r1**3) - 3/8*d_x*kr*z_0**2/(d**2*r1**5) + (1/2)*d_x*kr/(d**2*r0**3) + (3/8)*d_x*kr*z_0**2/(d**2*r0**5) - 1/2*d_x*l/(d**2*r1**3) - 3/8*d_x*l*z_0**2/(d**2*r1**5) - 1/2*d_x*x_0/(d**2*r1**3) - 3/8*d_x*x_0*z_0**2/(d**2*r1**5) + (1/2)*d_x*x_0/(d**2*r0**3) + (3/8)*d_x*x_0*z_0**2/(d**2*r0**5) + (9/8)*d_y*d_z**2*y_0/(d**2*r1**5) - 9/8*d_y*d_z**2*y_0/(d**2*r0**5) - 9/8*d_y*d_z*k_z*l*y_0/(d**2*r1**5) + (3/4)*d_y*d_z*y_0*z_0/(d**2*r1**5) - 3/4*d_y*d_z*y_0*z_0/(d**2*r0**5) + (3/8)*d_y*k_z**2*r0**2*y_0/(d**2*r1**5) - 3/8*d_y*k_z**2*y_0/(d**2*r0**3) - 15/8*d_y*k_z*l*y_0*z_0/(d**2*r1**5) - 1/2*d_y*y_0/(d**2*r1**3) - 3/8*d_y*y_0*z_0**2/(d**2*r1**5) + (1/2)*d_y*y_0/(d**2*r0**3) + (3/8)*d_y*y_0*z_0**2/(d**2*r0**5) + (9/8)*d_z**3*z_0/(d**2*r1**5) - 9/8*d_z**3*z_0/(d**2*r0**5) - 9/8*d_z**2*k_z*l*z_0/(d**2*r1**5) + (3/8)*d_z**2*kr**2/(d**2*r1**5) - 3/8*d_z**2*kr**2/(d**2*r0**5) + (3/8)*d_z**2*kr*l/(d**2*r1**5) + (3/4)*d_z**2*kr*x_0/(d**2*r1**5) - 3/4*d_z**2*kr*x_0/(d**2*r0**5) + (3/4)*d_z**2*l*x_0/(d**2*r1**5) - d_z**2/(d**2*r1**3) + (3/4)*d_z**2*z_0**2/(d**2*r1**5) + d_z**2/(d**2*r0**3) - 3/4*d_z**2*z_0**2/(d**2*r0**5) + (3/8)*d_z*k_z**2*r0**2*z_0/(d**2*r1**5) - 3/8*d_z*k_z**2*z_0/(d**2*r0**3) + d_z*k_z*l/(d**2*r1**3) - 15/8*d_z*k_z*l*z_0**2/(d**2*r1**5) + (3/4)*d_z*k_z*r0**2*x_0/(d**2*r1**5) - 3/4*d_z*k_z*x_0/(d**2*r0**3) + (3/2)*d_z*kr**2*z_0/(d**2*r1**5) - 3/2*d_z*kr**2*z_0/(d**2*r0**5) + (3/2)*d_z*kr*l*z_0/(d**2*r1**5) - 3/4*d_z*kr*x_0*z_0/(d**2*r1**5) + (3/4)*d_z*kr*x_0*z_0/(d**2*r0**5) - 3/4*d_z*l*x_0*z_0/(d**2*r1**5) - 9/4*d_z*r0**2*z_0/(d**2*r1**5) + (1/2)*d_z*z_0/(d**2*r1**3) - 3/8*d_z*z_0**3/(d**2*r1**5) + (7/4)*d_z*z_0/(d**2*r0**3) + (3/8)*d_z*z_0**3/(d**2*r0**5) - 3/8*k_x*k_z**2*l*r0**2*x_0/(d**2*r1**5) + (3/4)*k_x*k_z*l*r0**2*z_0/(d**2*r1**5) + (1/2)*k_x*l*x_0/(d**2*r1**3) - 3/2*k_x*l*x_0*z_0**2/(d**2*r1**5) - 3/8*k_y*k_z**2*l*r0**2*y_0/(d**2*r1**5) + (1/2)*k_y*l*y_0/(d**2*r1**3) - 3/2*k_y*l*y_0*z_0**2/(d**2*r1**5) - 3/8*k_z**3*l*r0**2*z_0/(d**2*r1**5) - 3/4*k_z**2*l*r0**2*x_0/(d**2*r1**5) - 3/8*k_z**2*r0**4/(d**2*r1**5) + (3/8)*k_z**2/(d**2*r0) + (9/4)*k_z*l*r0**2*z_0/(d**2*r1**5) + (1/2)*k_z*l*z_0/(d**2*r1**3) - 3/2*k_z*l*z_0**3/(d**2*r1**5) - 1/2*kr**2/(d**2*r1**3) - 3/8*kr**2*z_0**2/(d**2*r1**5) + (1/2)*kr**2/(d**2*r0**3) + (3/8)*kr**2*z_0**2/(d**2*r0**5) - 1/2*kr*l/(d**2*r1**3) - 3/8*kr*l*z_0**2/(d**2*r1**5) + (1/2)*r0**2/(d**2*r1**3) + (3/4)*r0**2*z_0**2/(d**2*r1**5) - 1/2/(d**2*r0) - 3/4*z_0**2/(d**2*r0**3) + (1/2)*d_x*d_z**2*kr/(d**4*r1**3) - 1/2*d_x*d_z**2*kr/(d**4*r0**3) + (1/2)*d_x*d_z**2*l/(d**4*r1**3) + (3/2)*d_x*d_z**2*x_0/(d**4*r1**3) - 3/2*d_x*d_z**2*x_0/(d**4*r0**3) - 3/2*d_x*d_z*k_z*l*x_0/(d**4*r1**3) - 3/2*d_x*d_z*k_z*r0**2/(d**4*r1**3) + (3/2)*d_x*d_z*k_z/(d**4*r0) + 2*d_x*d_z*kr*z_0/(d**4*r1**3) - 2*d_x*d_z*kr*z_0/(d**4*r0**3) + 2*d_x*d_z*l*z_0/(d**4*r1**3) + d_x*d_z*x_0*z_0/(d**4*r1**3) - d_x*d_z*x_0*z_0/(d**4*r0**3) + (3/2)*d_x*k_z**2*l*r0**2/(d**4*r1**3) + (1/2)*d_x*k_z**2*r0**2*x_0/(d**4*r1**3) - 1/2*d_x*k_z**2*x_0/(d**4*r0) - 5/2*d_x*k_z*l*x_0*z_0/(d**4*r1**3) + (1/2)*d_x*k_z*r0**2*z_0/(d**4*r1**3) - 1/2*d_x*k_z*z_0/(d**4*r0) - d_x*kr/(d**4*r1) - 1/2*d_x*kr*z_0**2/(d**4*r1**3) + d_x*kr/(d**4*r0) + (1/2)*d_x*kr*z_0**2/(d**4*r0**3) - d_x*l/(d**4*r1) - 1/2*d_x*l*z_0**2/(d**4*r1**3) - d_x*x_0/(d**4*r1) - 1/2*d_x*x_0*z_0**2/(d**4*r1**3) + d_x*x_0/(d**4*r0) + (1/2)*d_x*x_0*z_0**2/(d**4*r0**3) + (3/2)*d_y*d_z**2*y_0/(d**4*r1**3) - 3/2*d_y*d_z**2*y_0/(d**4*r0**3) - 3/2*d_y*d_z*k_z*l*y_0/(d**4*r1**3) + d_y*d_z*y_0*z_0/(d**4*r1**3) - d_y*d_z*y_0*z_0/(d**4*r0**3) + (1/2)*d_y*k_z**2*r0**2*y_0/(d**4*r1**3) - 1/2*d_y*k_z**2*y_0/(d**4*r0) - 5/2*d_y*k_z*l*y_0*z_0/(d**4*r1**3) - d_y*y_0/(d**4*r1) - 1/2*d_y*y_0*z_0**2/(d**4*r1**3) + d_y*y_0/(d**4*r0) + (1/2)*d_y*y_0*z_0**2/(d**4*r0**3) + (3/2)*d_z**3*z_0/(d**4*r1**3) - 3/2*d_z**3*z_0/(d**4*r0**3) - 3/2*d_z**2*k_z*l*z_0/(d**4*r1**3) + (1/2)*d_z**2*kr**2/(d**4*r1**3) - 1/2*d_z**2*kr**2/(d**4*r0**3) + (1/2)*d_z**2*kr*l/(d**4*r1**3) + d_z**2*kr*x_0/(d**4*r1**3) - d_z**2*kr*x_0/(d**4*r0**3) + d_z**2*l*x_0/(d**4*r1**3) - 2*d_z**2/(d**4*r1) + d_z**2*z_0**2/(d**4*r1**3) + 2*d_z**2/(d**4*r0) - d_z**2*z_0**2/(d**4*r0**3) + (1/2)*d_z*k_z**2*r0**2*z_0/(d**4*r1**3) - 1/2*d_z*k_z**2*z_0/(d**4*r0) + 2*d_z*k_z*l/(d**4*r1) - 5/2*d_z*k_z*l*z_0**2/(d**4*r1**3) + d_z*k_z*r0**2*x_0/(d**4*r1**3) - d_z*k_z*x_0/(d**4*r0) + 2*d_z*kr**2*z_0/(d**4*r1**3) - 2*d_z*kr**2*z_0/(d**4*r0**3) + 2*d_z*kr*l*z_0/(d**4*r1**3) - d_z*kr*x_0*z_0/(d**4*r1**3) + d_z*kr*x_0*z_0/(d**4*r0**3) - d_z*l*x_0*z_0/(d**4*r1**3) - 3*d_z*r0**2*z_0/(d**4*r1**3) + d_z*z_0/(d**4*r1) - 1/2*d_z*z_0**3/(d**4*r1**3) + 2*d_z*z_0/(d**4*r0) + (1/2)*d_z*z_0**3/(d**4*r0**3) - 1/2*k_x*k_z**2*l*r0**2*x_0/(d**4*r1**3) + k_x*k_z*l*r0**2*z_0/(d**4*r1**3) + k_x*l*x_0/(d**4*r1) - 2*k_x*l*x_0*z_0**2/(d**4*r1**3) - 1/2*k_y*k_z**2*l*r0**2*y_0/(d**4*r1**3) + k_y*l*y_0/(d**4*r1) - 2*k_y*l*y_0*z_0**2/(d**4*r1**3) - 1/2*k_z**3*l*r0**2*z_0/(d**4*r1**3) - k_z**2*l*r0**2*x_0/(d**4*r1**3) - 1/2*k_z**2*r0**4/(d**4*r1**3) + (1/2)*k_z**2*r0/d**4 + 3*k_z*l*r0**2*z_0/(d**4*r1**3) + k_z*l*z_0/(d**4*r1) - 2*k_z*l*z_0**3/(d**4*r1**3) - kr**2/(d**4*r1) - 1/2*kr**2*z_0**2/(d**4*r1**3) + kr**2/(d**4*r0) + (1/2)*kr**2*z_0**2/(d**4*r0**3) - kr*l/(d**4*r1) - 1/2*kr*l*z_0**2/(d**4*r1**3) + r0**2/(d**4*r1) + r0**2*z_0**2/(d**4*r1**3) - r0/d**4 - z_0**2/(d**4*r0) + d_x*d_z**2*kr/(d**6*r1) - d_x*d_z**2*kr/(d**6*r0) + d_x*d_z**2*l/(d**6*r1) + 3*d_x*d_z**2*x_0/(d**6*r1) - 3*d_x*d_z**2*x_0/(d**6*r0) - 3*d_x*d_z*k_z*l*x_0/(d**6*r1) - 3*d_x*d_z*k_z*r0**2/(d**6*r1) + 3*d_x*d_z*k_z*r0/d**6 + 4*d_x*d_z*kr*z_0/(d**6*r1) - 4*d_x*d_z*kr*z_0/(d**6*r0) + 4*d_x*d_z*l*z_0/(d**6*r1) + 2*d_x*d_z*x_0*z_0/(d**6*r1) - 2*d_x*d_z*x_0*z_0/(d**6*r0) + d_x*k_z**2*l*r0**2/(d**6*r1) + d_x*k_z**2*r0**2*x_0/(d**6*r1) - d_x*k_z**2*r0*x_0/d**6 - d_x*k_z*l*x_0*z_0/(d**6*r1) + d_x*k_z*r0**2*z_0/(d**6*r1) - d_x*k_z*r0*z_0/d**6 - d_x*kr*z_0**2/(d**6*r1) + d_x*kr*z_0**2/(d**6*r0) - d_x*l*z_0**2/(d**6*r1) - d_x*x_0*z_0**2/(d**6*r1) + d_x*x_0*z_0**2/(d**6*r0) + 3*d_y*d_z**2*y_0/(d**6*r1) - 3*d_y*d_z**2*y_0/(d**6*r0) - 3*d_y*d_z*k_z*l*y_0/(d**6*r1) + 2*d_y*d_z*y_0*z_0/(d**6*r1) - 2*d_y*d_z*y_0*z_0/(d**6*r0) + d_y*k_z**2*r0**2*y_0/(d**6*r1) - d_y*k_z**2*r0*y_0/d**6 - d_y*k_z*l*y_0*z_0/(d**6*r1) - d_y*y_0*z_0**2/(d**6*r1) + d_y*y_0*z_0**2/(d**6*r0) + 3*d_z**3*z_0/(d**6*r1) - 3*d_z**3*z_0/(d**6*r0) - 3*d_z**2*k_z*l*z_0/(d**6*r1) + d_z**2*kr**2/(d**6*r1) - d_z**2*kr**2/(d**6*r0) + d_z**2*kr*l/(d**6*r1) + 2*d_z**2*kr*x_0/(d**6*r1) - 2*d_z**2*kr*x_0/(d**6*r0) + 2*d_z**2*l*x_0/(d**6*r1) + 2*d_z**2*z_0**2/(d**6*r1) - 2*d_z**2*z_0**2/(d**6*r0) + 2*d_z*k_x*k_z*l*r0**2/(d**6*r1) - 4*d_z*k_x*l*x_0*z_0/(d**6*r1) - 4*d_z*k_y*l*y_0*z_0/(d**6*r1) + d_z*k_z**2*r0**2*z_0/(d**6*r1) - d_z*k_z**2*r0*z_0/d**6 - 5*d_z*k_z*l*z_0**2/(d**6*r1) + 2*d_z*k_z*r0**2*x_0/(d**6*r1) - 2*d_z*k_z*r0*x_0/d**6 + 4*d_z*kr**2*z_0/(d**6*r1) - 4*d_z*kr**2*z_0/(d**6*r0) + 4*d_z*kr*l*z_0/(d**6*r1) - 2*d_z*kr*x_0*z_0/(d**6*r1) + 2*d_z*kr*x_0*z_0/(d**6*r0) - 2*d_z*l*x_0*z_0/(d**6*r1) - 6*d_z*r0**2*z_0/(d**6*r1) + 6*d_z*r0*z_0/d**6 - d_z*z_0**3/(d**6*r1) + d_z*z_0**3/(d**6*r0) - k_x*k_z**2*l*r0**2*x_0/(d**6*r1) - k_y*k_z**2*l*r0**2*y_0/(d**6*r1) - k_z**3*l*r0**2*z_0/(d**6*r1) - k_z**2*r0**4/(d**6*r1) + k_z**2*r0**3/d**6 + 2*k_z*l*r0**2*z_0/(d**6*r1) - kr**2*z_0**2/(d**6*r1) + kr**2*z_0**2/(d**6*r0) - kr*l*z_0**2/(d**6*r1) + 2*r0**2*z_0**2/(d**6*r1) - 2*r0*z_0**2/d**6






def alpha_y_quadrupole(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return (9/8)*d_x*k_z**2*x_0/r1**5 - 9/8*d_x*k_z**2*x_0/r0**5 - 3/8*d_y*d_z*k_z/r1**5 + (3/8)*d_y*d_z*k_z/r0**5 + (9/8)*d_y*k_z**2*y_0/r1**5 - 9/8*d_y*k_z**2*y_0/r0**5 - 5/4*d_y*k_z*z_0/r1**5 - 5/8*d_y*k_z*z_1/r1**5 + (15/8)*d_y*k_z*z_0/r0**5 + (3/8)*d_z**2/r1**5 - 3/8*d_z**2/r0**5 + (9/8)*d_z*k_z**2*z_0/r1**5 - 9/8*d_z*k_z**2*z_0/r0**5 - 3/4*d_z*k_z*y_0/r1**5 + (3/4)*d_z*k_z*y_0/r0**5 + (7/8)*d_z*z_0/r1**5 + (5/8)*d_z*z_1/r1**5 - 3/2*d_z*z_0/r0**5 + (9/8)*k_x*k_z*x_0*z_0/r1**5 + (15/8)*k_x*k_z*x_0*z_1/r1**5 - 3*k_x*k_z*x_0*z_0/r0**5 - k_y*k_z**2*r0**2/r1**5 + k_y*k_z**2/r0**3 + (9/8)*k_y*k_z*y_0*z_0/r1**5 + (15/8)*k_y*k_z*y_0*z_1/r1**5 - 3*k_y*k_z*y_0*z_0/r0**5 + (1/2)*k_y/r1**3 - 1/4*k_y*z_0**2/r1**5 + (5/4)*k_y*z_0*z_1/r1**5 - 5/2*k_y*z_1**2/r1**5 - 1/2*k_y/r0**3 + (3/2)*k_y*z_0**2/r0**5 - 1/8*k_z**2*r0**2/r1**5 - k_z**2/r1**3 + (9/8)*k_z**2*z_0**2/r1**5 + (15/8)*k_z**2*z_0*z_1/r1**5 + (9/8)*k_z**2/r0**3 - 3*k_z**2*z_0**2/r0**5 + (5/4)*k_z*y_0*z_0/r1**5 - 5/4*k_z*y_0*z_1/r1**5 - 1/2/r1**3 - z_0**2/r1**5 - 15/8*z_0*z_1/r1**5 + (5/2)*z_1**2/r1**5 + (1/2)/r0**3 + (3/8)*z_0**2/r0**5 + (9/8)*d_x*d_z**2*x_0/(d**2*r1**5) - 9/8*d_x*d_z**2*x_0/(d**2*r0**5) - 9/8*d_x*d_z*k_z*l*x_0/(d**2*r1**5) + (3/4)*d_x*d_z*x_0*z_0/(d**2*r1**5) - 3/4*d_x*d_z*x_0*z_0/(d**2*r0**5) + (3/8)*d_x*k_z**2*r0**2*x_0/(d**2*r1**5) - 3/8*d_x*k_z**2*x_0/(d**2*r0**3) - 15/8*d_x*k_z*l*x_0*z_0/(d**2*r1**5) - 1/2*d_x*x_0/(d**2*r1**3) - 3/8*d_x*x_0*z_0**2/(d**2*r1**5) + (1/2)*d_x*x_0/(d**2*r0**3) + (3/8)*d_x*x_0*z_0**2/(d**2*r0**5) + (3/8)*d_y*d_z**2*kr/(d**2*r1**5) - 3/8*d_y*d_z**2*kr/(d**2*r0**5) + (3/8)*d_y*d_z**2*l/(d**2*r1**5) + (9/8)*d_y*d_z**2*y_0/(d**2*r1**5) - 9/8*d_y*d_z**2*y_0/(d**2*r0**5) - 9/8*d_y*d_z*k_z*l*y_0/(d**2*r1**5) - 9/8*d_y*d_z*k_z*r0**2/(d**2*r1**5) + (9/8)*d_y*d_z*k_z/(d**2*r0**3) + (3/2)*d_y*d_z*kr*z_0/(d**2*r1**5) - 3/2*d_y*d_z*kr*z_0/(d**2*r0**5) + (3/2)*d_y*d_z*l*z_0/(d**2*r1**5) + (3/4)*d_y*d_z*y_0*z_0/(d**2*r1**5) - 3/4*d_y*d_z*y_0*z_0/(d**2*r0**5) + (9/8)*d_y*k_z**2*l*r0**2/(d**2*r1**5) + (3/8)*d_y*k_z**2*r0**2*y_0/(d**2*r1**5) - 3/8*d_y*k_z**2*y_0/(d**2*r0**3) - 15/8*d_y*k_z*l*y_0*z_0/(d**2*r1**5) + (3/8)*d_y*k_z*r0**2*z_0/(d**2*r1**5) - 3/8*d_y*k_z*z_0/(d**2*r0**3) - 1/2*d_y*kr/(d**2*r1**3) - 3/8*d_y*kr*z_0**2/(d**2*r1**5) + (1/2)*d_y*kr/(d**2*r0**3) + (3/8)*d_y*kr*z_0**2/(d**2*r0**5) - 1/2*d_y*l/(d**2*r1**3) - 3/8*d_y*l*z_0**2/(d**2*r1**5) - 1/2*d_y*y_0/(d**2*r1**3) - 3/8*d_y*y_0*z_0**2/(d**2*r1**5) + (1/2)*d_y*y_0/(d**2*r0**3) + (3/8)*d_y*y_0*z_0**2/(d**2*r0**5) + (9/8)*d_z**3*z_0/(d**2*r1**5) - 9/8*d_z**3*z_0/(d**2*r0**5) - 9/8*d_z**2*k_z*l*z_0/(d**2*r1**5) + (3/8)*d_z**2*kr**2/(d**2*r1**5) - 3/8*d_z**2*kr**2/(d**2*r0**5) + (3/8)*d_z**2*kr*l/(d**2*r1**5) + (3/4)*d_z**2*kr*y_0/(d**2*r1**5) - 3/4*d_z**2*kr*y_0/(d**2*r0**5) + (3/4)*d_z**2*l*y_0/(d**2*r1**5) - d_z**2/(d**2*r1**3) + (3/4)*d_z**2*z_0**2/(d**2*r1**5) + d_z**2/(d**2*r0**3) - 3/4*d_z**2*z_0**2/(d**2*r0**5) + (3/8)*d_z*k_z**2*r0**2*z_0/(d**2*r1**5) - 3/8*d_z*k_z**2*z_0/(d**2*r0**3) + d_z*k_z*l/(d**2*r1**3) - 15/8*d_z*k_z*l*z_0**2/(d**2*r1**5) + (3/4)*d_z*k_z*r0**2*y_0/(d**2*r1**5) - 3/4*d_z*k_z*y_0/(d**2*r0**3) + (3/2)*d_z*kr**2*z_0/(d**2*r1**5) - 3/2*d_z*kr**2*z_0/(d**2*r0**5) + (3/2)*d_z*kr*l*z_0/(d**2*r1**5) - 3/4*d_z*kr*y_0*z_0/(d**2*r1**5) + (3/4)*d_z*kr*y_0*z_0/(d**2*r0**5) - 3/4*d_z*l*y_0*z_0/(d**2*r1**5) - 9/4*d_z*r0**2*z_0/(d**2*r1**5) + (1/2)*d_z*z_0/(d**2*r1**3) - 3/8*d_z*z_0**3/(d**2*r1**5) + (7/4)*d_z*z_0/(d**2*r0**3) + (3/8)*d_z*z_0**3/(d**2*r0**5) - 3/8*k_x*k_z**2*l*r0**2*x_0/(d**2*r1**5) + (1/2)*k_x*l*x_0/(d**2*r1**3) - 3/2*k_x*l*x_0*z_0**2/(d**2*r1**5) - 3/8*k_y*k_z**2*l*r0**2*y_0/(d**2*r1**5) + (3/4)*k_y*k_z*l*r0**2*z_0/(d**2*r1**5) + (1/2)*k_y*l*y_0/(d**2*r1**3) - 3/2*k_y*l*y_0*z_0**2/(d**2*r1**5) - 3/8*k_z**3*l*r0**2*z_0/(d**2*r1**5) - 3/4*k_z**2*l*r0**2*y_0/(d**2*r1**5) - 3/8*k_z**2*r0**4/(d**2*r1**5) + (3/8)*k_z**2/(d**2*r0) + (9/4)*k_z*l*r0**2*z_0/(d**2*r1**5) + (1/2)*k_z*l*z_0/(d**2*r1**3) - 3/2*k_z*l*z_0**3/(d**2*r1**5) - 1/2*kr**2/(d**2*r1**3) - 3/8*kr**2*z_0**2/(d**2*r1**5) + (1/2)*kr**2/(d**2*r0**3) + (3/8)*kr**2*z_0**2/(d**2*r0**5) - 1/2*kr*l/(d**2*r1**3) - 3/8*kr*l*z_0**2/(d**2*r1**5) + (1/2)*r0**2/(d**2*r1**3) + (3/4)*r0**2*z_0**2/(d**2*r1**5) - 1/2/(d**2*r0) - 3/4*z_0**2/(d**2*r0**3) + (3/2)*d_x*d_z**2*x_0/(d**4*r1**3) - 3/2*d_x*d_z**2*x_0/(d**4*r0**3) - 3/2*d_x*d_z*k_z*l*x_0/(d**4*r1**3) + d_x*d_z*x_0*z_0/(d**4*r1**3) - d_x*d_z*x_0*z_0/(d**4*r0**3) + (1/2)*d_x*k_z**2*r0**2*x_0/(d**4*r1**3) - 1/2*d_x*k_z**2*x_0/(d**4*r0) - 5/2*d_x*k_z*l*x_0*z_0/(d**4*r1**3) - d_x*x_0/(d**4*r1) - 1/2*d_x*x_0*z_0**2/(d**4*r1**3) + d_x*x_0/(d**4*r0) + (1/2)*d_x*x_0*z_0**2/(d**4*r0**3) + (1/2)*d_y*d_z**2*kr/(d**4*r1**3) - 1/2*d_y*d_z**2*kr/(d**4*r0**3) + (1/2)*d_y*d_z**2*l/(d**4*r1**3) + (3/2)*d_y*d_z**2*y_0/(d**4*r1**3) - 3/2*d_y*d_z**2*y_0/(d**4*r0**3) - 3/2*d_y*d_z*k_z*l*y_0/(d**4*r1**3) - 3/2*d_y*d_z*k_z*r0**2/(d**4*r1**3) + (3/2)*d_y*d_z*k_z/(d**4*r0) + 2*d_y*d_z*kr*z_0/(d**4*r1**3) - 2*d_y*d_z*kr*z_0/(d**4*r0**3) + 2*d_y*d_z*l*z_0/(d**4*r1**3) + d_y*d_z*y_0*z_0/(d**4*r1**3) - d_y*d_z*y_0*z_0/(d**4*r0**3) + (3/2)*d_y*k_z**2*l*r0**2/(d**4*r1**3) + (1/2)*d_y*k_z**2*r0**2*y_0/(d**4*r1**3) - 1/2*d_y*k_z**2*y_0/(d**4*r0) - 5/2*d_y*k_z*l*y_0*z_0/(d**4*r1**3) + (1/2)*d_y*k_z*r0**2*z_0/(d**4*r1**3) - 1/2*d_y*k_z*z_0/(d**4*r0) - d_y*kr/(d**4*r1) - 1/2*d_y*kr*z_0**2/(d**4*r1**3) + d_y*kr/(d**4*r0) + (1/2)*d_y*kr*z_0**2/(d**4*r0**3) - d_y*l/(d**4*r1) - 1/2*d_y*l*z_0**2/(d**4*r1**3) - d_y*y_0/(d**4*r1) - 1/2*d_y*y_0*z_0**2/(d**4*r1**3) + d_y*y_0/(d**4*r0) + (1/2)*d_y*y_0*z_0**2/(d**4*r0**3) + (3/2)*d_z**3*z_0/(d**4*r1**3) - 3/2*d_z**3*z_0/(d**4*r0**3) - 3/2*d_z**2*k_z*l*z_0/(d**4*r1**3) + (1/2)*d_z**2*kr**2/(d**4*r1**3) - 1/2*d_z**2*kr**2/(d**4*r0**3) + (1/2)*d_z**2*kr*l/(d**4*r1**3) + d_z**2*kr*y_0/(d**4*r1**3) - d_z**2*kr*y_0/(d**4*r0**3) + d_z**2*l*y_0/(d**4*r1**3) - 2*d_z**2/(d**4*r1) + d_z**2*z_0**2/(d**4*r1**3) + 2*d_z**2/(d**4*r0) - d_z**2*z_0**2/(d**4*r0**3) + (1/2)*d_z*k_z**2*r0**2*z_0/(d**4*r1**3) - 1/2*d_z*k_z**2*z_0/(d**4*r0) + 2*d_z*k_z*l/(d**4*r1) - 5/2*d_z*k_z*l*z_0**2/(d**4*r1**3) + d_z*k_z*r0**2*y_0/(d**4*r1**3) - d_z*k_z*y_0/(d**4*r0) + 2*d_z*kr**2*z_0/(d**4*r1**3) - 2*d_z*kr**2*z_0/(d**4*r0**3) + 2*d_z*kr*l*z_0/(d**4*r1**3) - d_z*kr*y_0*z_0/(d**4*r1**3) + d_z*kr*y_0*z_0/(d**4*r0**3) - d_z*l*y_0*z_0/(d**4*r1**3) - 3*d_z*r0**2*z_0/(d**4*r1**3) + d_z*z_0/(d**4*r1) - 1/2*d_z*z_0**3/(d**4*r1**3) + 2*d_z*z_0/(d**4*r0) + (1/2)*d_z*z_0**3/(d**4*r0**3) - 1/2*k_x*k_z**2*l*r0**2*x_0/(d**4*r1**3) + k_x*l*x_0/(d**4*r1) - 2*k_x*l*x_0*z_0**2/(d**4*r1**3) - 1/2*k_y*k_z**2*l*r0**2*y_0/(d**4*r1**3) + k_y*k_z*l*r0**2*z_0/(d**4*r1**3) + k_y*l*y_0/(d**4*r1) - 2*k_y*l*y_0*z_0**2/(d**4*r1**3) - 1/2*k_z**3*l*r0**2*z_0/(d**4*r1**3) - k_z**2*l*r0**2*y_0/(d**4*r1**3) - 1/2*k_z**2*r0**4/(d**4*r1**3) + (1/2)*k_z**2*r0/d**4 + 3*k_z*l*r0**2*z_0/(d**4*r1**3) + k_z*l*z_0/(d**4*r1) - 2*k_z*l*z_0**3/(d**4*r1**3) - kr**2/(d**4*r1) - 1/2*kr**2*z_0**2/(d**4*r1**3) + kr**2/(d**4*r0) + (1/2)*kr**2*z_0**2/(d**4*r0**3) - kr*l/(d**4*r1) - 1/2*kr*l*z_0**2/(d**4*r1**3) + r0**2/(d**4*r1) + r0**2*z_0**2/(d**4*r1**3) - r0/d**4 - z_0**2/(d**4*r0) + 3*d_x*d_z**2*x_0/(d**6*r1) - 3*d_x*d_z**2*x_0/(d**6*r0) - 3*d_x*d_z*k_z*l*x_0/(d**6*r1) + 2*d_x*d_z*x_0*z_0/(d**6*r1) - 2*d_x*d_z*x_0*z_0/(d**6*r0) + d_x*k_z**2*r0**2*x_0/(d**6*r1) - d_x*k_z**2*r0*x_0/d**6 - d_x*k_z*l*x_0*z_0/(d**6*r1) - d_x*x_0*z_0**2/(d**6*r1) + d_x*x_0*z_0**2/(d**6*r0) + d_y*d_z**2*kr/(d**6*r1) - d_y*d_z**2*kr/(d**6*r0) + d_y*d_z**2*l/(d**6*r1) + 3*d_y*d_z**2*y_0/(d**6*r1) - 3*d_y*d_z**2*y_0/(d**6*r0) - 3*d_y*d_z*k_z*l*y_0/(d**6*r1) - 3*d_y*d_z*k_z*r0**2/(d**6*r1) + 3*d_y*d_z*k_z*r0/d**6 + 4*d_y*d_z*kr*z_0/(d**6*r1) - 4*d_y*d_z*kr*z_0/(d**6*r0) + 4*d_y*d_z*l*z_0/(d**6*r1) + 2*d_y*d_z*y_0*z_0/(d**6*r1) - 2*d_y*d_z*y_0*z_0/(d**6*r0) + d_y*k_z**2*l*r0**2/(d**6*r1) + d_y*k_z**2*r0**2*y_0/(d**6*r1) - d_y*k_z**2*r0*y_0/d**6 - d_y*k_z*l*y_0*z_0/(d**6*r1) + d_y*k_z*r0**2*z_0/(d**6*r1) - d_y*k_z*r0*z_0/d**6 - d_y*kr*z_0**2/(d**6*r1) + d_y*kr*z_0**2/(d**6*r0) - d_y*l*z_0**2/(d**6*r1) - d_y*y_0*z_0**2/(d**6*r1) + d_y*y_0*z_0**2/(d**6*r0) + 3*d_z**3*z_0/(d**6*r1) - 3*d_z**3*z_0/(d**6*r0) - 3*d_z**2*k_z*l*z_0/(d**6*r1) + d_z**2*kr**2/(d**6*r1) - d_z**2*kr**2/(d**6*r0) + d_z**2*kr*l/(d**6*r1) + 2*d_z**2*kr*y_0/(d**6*r1) - 2*d_z**2*kr*y_0/(d**6*r0) + 2*d_z**2*l*y_0/(d**6*r1) + 2*d_z**2*z_0**2/(d**6*r1) - 2*d_z**2*z_0**2/(d**6*r0) - 4*d_z*k_x*l*x_0*z_0/(d**6*r1) + 2*d_z*k_y*k_z*l*r0**2/(d**6*r1) - 4*d_z*k_y*l*y_0*z_0/(d**6*r1) + d_z*k_z**2*r0**2*z_0/(d**6*r1) - d_z*k_z**2*r0*z_0/d**6 - 5*d_z*k_z*l*z_0**2/(d**6*r1) + 2*d_z*k_z*r0**2*y_0/(d**6*r1) - 2*d_z*k_z*r0*y_0/d**6 + 4*d_z*kr**2*z_0/(d**6*r1) - 4*d_z*kr**2*z_0/(d**6*r0) + 4*d_z*kr*l*z_0/(d**6*r1) - 2*d_z*kr*y_0*z_0/(d**6*r1) + 2*d_z*kr*y_0*z_0/(d**6*r0) - 2*d_z*l*y_0*z_0/(d**6*r1) - 6*d_z*r0**2*z_0/(d**6*r1) + 6*d_z*r0*z_0/d**6 - d_z*z_0**3/(d**6*r1) + d_z*z_0**3/(d**6*r0) - k_x*k_z**2*l*r0**2*x_0/(d**6*r1) - k_y*k_z**2*l*r0**2*y_0/(d**6*r1) - k_z**3*l*r0**2*z_0/(d**6*r1) - k_z**2*r0**4/(d**6*r1) + k_z**2*r0**3/d**6 + 2*k_z*l*r0**2*z_0/(d**6*r1) - kr**2*z_0**2/(d**6*r1) + kr**2*z_0**2/(d**6*r0) - kr*l*z_0**2/(d**6*r1) + 2*r0**2*z_0**2/(d**6*r1) - 2*r0*z_0**2/d**6




def alpha_z_quadrupole(X0,X1):
    x_0,y_0,z_0 = X0
    x_1,y_1,z_1 = X1
    l = sqrt((x_1-x_0)**2 + (y_1-y_0)**2 + (z_1-z_0)**2)
    k_x = (x_1-x_0)/l
    k_y = (y_1-y_0)/l
    k_z = (z_1-z_0)/l
    r0 = sqrt(x_0**2+y_0**2+z_0**2)
    r1 = sqrt(x_1**2+y_1**2+z_1**2)
    kr = k_x*x_0+k_y*y_0+k_z*z_0
    d_x = x_0 - k_x*kr
    d_y = y_0 - k_y*kr
    d_z = z_0 - k_z*kr
    d = sqrt(d_x**2+d_y**2+d_z**2)
    return (9/8)*d_x*k_z**2*x_0/r1**5 - 9/8*d_x*k_z**2*x_0/r0**5 + (9/8)*d_y*k_z**2*y_0/r1**5 - 9/8*d_y*k_z**2*y_0/r0**5 - 3/8*d_z**2*k_z/r1**5 + (3/8)*d_z**2*k_z/r0**5 + (3/8)*d_z**2/r1**5 - 3/8*d_z**2/r0**5 + (9/8)*d_z*k_z**2*z_0/r1**5 - 9/8*d_z*k_z**2*z_0/r0**5 - 2*d_z*k_z*z_0/r1**5 - 5/8*d_z*k_z*z_1/r1**5 + (21/8)*d_z*k_z*z_0/r0**5 + (7/8)*d_z*z_0/r1**5 + (5/8)*d_z*z_1/r1**5 - 3/2*d_z*z_0/r0**5 + (9/8)*k_x*k_z*x_0*z_0/r1**5 + (15/8)*k_x*k_z*x_0*z_1/r1**5 - 3*k_x*k_z*x_0*z_0/r0**5 + (9/8)*k_y*k_z*y_0*z_0/r1**5 + (15/8)*k_y*k_z*y_0*z_1/r1**5 - 3*k_y*k_z*y_0*z_0/r0**5 - k_z**3*r0**2/r1**5 + k_z**3/r0**3 - 1/8*k_z**2*r0**2/r1**5 - k_z**2/r1**3 + (9/8)*k_z**2*z_0**2/r1**5 + (15/8)*k_z**2*z_0*z_1/r1**5 + (9/8)*k_z**2/r0**3 - 3*k_z**2*z_0**2/r0**5 + (3/2)*k_z/r1**3 + k_z*z_0**2/r1**5 - 5/2*k_z*z_1**2/r1**5 - 3/2*k_z/r0**3 + (3/2)*k_z*z_0**2/r0**5 - 1/2/r1**3 - z_0**2/r1**5 - 15/8*z_0*z_1/r1**5 + (5/2)*z_1**2/r1**5 + (1/2)/r0**3 + (3/8)*z_0**2/r0**5 + (9/8)*d_x*d_z**2*x_0/(d**2*r1**5) - 9/8*d_x*d_z**2*x_0/(d**2*r0**5) - 9/8*d_x*d_z*k_z*l*x_0/(d**2*r1**5) + (3/4)*d_x*d_z*x_0*z_0/(d**2*r1**5) - 3/4*d_x*d_z*x_0*z_0/(d**2*r0**5) + (3/8)*d_x*k_z**2*r0**2*x_0/(d**2*r1**5) - 3/8*d_x*k_z**2*x_0/(d**2*r0**3) - 15/8*d_x*k_z*l*x_0*z_0/(d**2*r1**5) - 1/2*d_x*x_0/(d**2*r1**3) - 3/8*d_x*x_0*z_0**2/(d**2*r1**5) + (1/2)*d_x*x_0/(d**2*r0**3) + (3/8)*d_x*x_0*z_0**2/(d**2*r0**5) + (9/8)*d_y*d_z**2*y_0/(d**2*r1**5) - 9/8*d_y*d_z**2*y_0/(d**2*r0**5) - 9/8*d_y*d_z*k_z*l*y_0/(d**2*r1**5) + (3/4)*d_y*d_z*y_0*z_0/(d**2*r1**5) - 3/4*d_y*d_z*y_0*z_0/(d**2*r0**5) + (3/8)*d_y*k_z**2*r0**2*y_0/(d**2*r1**5) - 3/8*d_y*k_z**2*y_0/(d**2*r0**3) - 15/8*d_y*k_z*l*y_0*z_0/(d**2*r1**5) - 1/2*d_y*y_0/(d**2*r1**3) - 3/8*d_y*y_0*z_0**2/(d**2*r1**5) + (1/2)*d_y*y_0/(d**2*r0**3) + (3/8)*d_y*y_0*z_0**2/(d**2*r0**5) + (3/8)*d_z**3*kr/(d**2*r1**5) - 3/8*d_z**3*kr/(d**2*r0**5) + (3/8)*d_z**3*l/(d**2*r1**5) + (9/8)*d_z**3*z_0/(d**2*r1**5) - 9/8*d_z**3*z_0/(d**2*r0**5) - 9/8*d_z**2*k_z*l*z_0/(d**2*r1**5) - 9/8*d_z**2*k_z*r0**2/(d**2*r1**5) + (9/8)*d_z**2*k_z/(d**2*r0**3) + (3/8)*d_z**2*kr**2/(d**2*r1**5) - 3/8*d_z**2*kr**2/(d**2*r0**5) + (3/8)*d_z**2*kr*l/(d**2*r1**5) + (9/4)*d_z**2*kr*z_0/(d**2*r1**5) - 9/4*d_z**2*kr*z_0/(d**2*r0**5) + (9/4)*d_z**2*l*z_0/(d**2*r1**5) - d_z**2/(d**2*r1**3) + (3/4)*d_z**2*z_0**2/(d**2*r1**5) + d_z**2/(d**2*r0**3) - 3/4*d_z**2*z_0**2/(d**2*r0**5) + (9/8)*d_z*k_z**2*l*r0**2/(d**2*r1**5) + (3/8)*d_z*k_z**2*r0**2*z_0/(d**2*r1**5) - 3/8*d_z*k_z**2*z_0/(d**2*r0**3) + d_z*k_z*l/(d**2*r1**3) - 15/8*d_z*k_z*l*z_0**2/(d**2*r1**5) + (9/8)*d_z*k_z*r0**2*z_0/(d**2*r1**5) - 9/8*d_z*k_z*z_0/(d**2*r0**3) + (3/2)*d_z*kr**2*z_0/(d**2*r1**5) - 3/2*d_z*kr**2*z_0/(d**2*r0**5) + (3/2)*d_z*kr*l*z_0/(d**2*r1**5) - 3/2*d_z*kr/(d**2*r1**3) - 9/8*d_z*kr*z_0**2/(d**2*r1**5) + (3/2)*d_z*kr/(d**2*r0**3) + (9/8)*d_z*kr*z_0**2/(d**2*r0**5) - 3/2*d_z*l/(d**2*r1**3) - 9/8*d_z*l*z_0**2/(d**2*r1**5) - 9/4*d_z*r0**2*z_0/(d**2*r1**5) + (1/2)*d_z*z_0/(d**2*r1**3) - 3/8*d_z*z_0**3/(d**2*r1**5) + (7/4)*d_z*z_0/(d**2*r0**3) + (3/8)*d_z*z_0**3/(d**2*r0**5) - 3/8*k_x*k_z**2*l*r0**2*x_0/(d**2*r1**5) + (1/2)*k_x*l*x_0/(d**2*r1**3) - 3/2*k_x*l*x_0*z_0**2/(d**2*r1**5) - 3/8*k_y*k_z**2*l*r0**2*y_0/(d**2*r1**5) + (1/2)*k_y*l*y_0/(d**2*r1**3) - 3/2*k_y*l*y_0*z_0**2/(d**2*r1**5) - 3/8*k_z**3*l*r0**2*z_0/(d**2*r1**5) - 3/8*k_z**2*r0**4/(d**2*r1**5) + (3/8)*k_z**2/(d**2*r0) + (9/4)*k_z*l*r0**2*z_0/(d**2*r1**5) + (1/2)*k_z*l*z_0/(d**2*r1**3) - 3/2*k_z*l*z_0**3/(d**2*r1**5) - 1/2*kr**2/(d**2*r1**3) - 3/8*kr**2*z_0**2/(d**2*r1**5) + (1/2)*kr**2/(d**2*r0**3) + (3/8)*kr**2*z_0**2/(d**2*r0**5) - 1/2*kr*l/(d**2*r1**3) - 3/8*kr*l*z_0**2/(d**2*r1**5) + (1/2)*r0**2/(d**2*r1**3) + (3/4)*r0**2*z_0**2/(d**2*r1**5) - 1/2/(d**2*r0) - 3/4*z_0**2/(d**2*r0**3) + (3/2)*d_x*d_z**2*x_0/(d**4*r1**3) - 3/2*d_x*d_z**2*x_0/(d**4*r0**3) - 3/2*d_x*d_z*k_z*l*x_0/(d**4*r1**3) + d_x*d_z*x_0*z_0/(d**4*r1**3) - d_x*d_z*x_0*z_0/(d**4*r0**3) + (1/2)*d_x*k_z**2*r0**2*x_0/(d**4*r1**3) - 1/2*d_x*k_z**2*x_0/(d**4*r0) - 5/2*d_x*k_z*l*x_0*z_0/(d**4*r1**3) - d_x*x_0/(d**4*r1) - 1/2*d_x*x_0*z_0**2/(d**4*r1**3) + d_x*x_0/(d**4*r0) + (1/2)*d_x*x_0*z_0**2/(d**4*r0**3) + (3/2)*d_y*d_z**2*y_0/(d**4*r1**3) - 3/2*d_y*d_z**2*y_0/(d**4*r0**3) - 3/2*d_y*d_z*k_z*l*y_0/(d**4*r1**3) + d_y*d_z*y_0*z_0/(d**4*r1**3) - d_y*d_z*y_0*z_0/(d**4*r0**3) + (1/2)*d_y*k_z**2*r0**2*y_0/(d**4*r1**3) - 1/2*d_y*k_z**2*y_0/(d**4*r0) - 5/2*d_y*k_z*l*y_0*z_0/(d**4*r1**3) - d_y*y_0/(d**4*r1) - 1/2*d_y*y_0*z_0**2/(d**4*r1**3) + d_y*y_0/(d**4*r0) + (1/2)*d_y*y_0*z_0**2/(d**4*r0**3) + (1/2)*d_z**3*kr/(d**4*r1**3) - 1/2*d_z**3*kr/(d**4*r0**3) + (1/2)*d_z**3*l/(d**4*r1**3) + (3/2)*d_z**3*z_0/(d**4*r1**3) - 3/2*d_z**3*z_0/(d**4*r0**3) - 3/2*d_z**2*k_z*l*z_0/(d**4*r1**3) - 3/2*d_z**2*k_z*r0**2/(d**4*r1**3) + (3/2)*d_z**2*k_z/(d**4*r0) + (1/2)*d_z**2*kr**2/(d**4*r1**3) - 1/2*d_z**2*kr**2/(d**4*r0**3) + (1/2)*d_z**2*kr*l/(d**4*r1**3) + 3*d_z**2*kr*z_0/(d**4*r1**3) - 3*d_z**2*kr*z_0/(d**4*r0**3) + 3*d_z**2*l*z_0/(d**4*r1**3) - 2*d_z**2/(d**4*r1) + d_z**2*z_0**2/(d**4*r1**3) + 2*d_z**2/(d**4*r0) - d_z**2*z_0**2/(d**4*r0**3) + (3/2)*d_z*k_z**2*l*r0**2/(d**4*r1**3) + (1/2)*d_z*k_z**2*r0**2*z_0/(d**4*r1**3) - 1/2*d_z*k_z**2*z_0/(d**4*r0) + 2*d_z*k_z*l/(d**4*r1) - 5/2*d_z*k_z*l*z_0**2/(d**4*r1**3) + (3/2)*d_z*k_z*r0**2*z_0/(d**4*r1**3) - 3/2*d_z*k_z*z_0/(d**4*r0) + 2*d_z*kr**2*z_0/(d**4*r1**3) - 2*d_z*kr**2*z_0/(d**4*r0**3) + 2*d_z*kr*l*z_0/(d**4*r1**3) - 3*d_z*kr/(d**4*r1) - 3/2*d_z*kr*z_0**2/(d**4*r1**3) + 3*d_z*kr/(d**4*r0) + (3/2)*d_z*kr*z_0**2/(d**4*r0**3) - 3*d_z*l/(d**4*r1) - 3/2*d_z*l*z_0**2/(d**4*r1**3) - 3*d_z*r0**2*z_0/(d**4*r1**3) + d_z*z_0/(d**4*r1) - 1/2*d_z*z_0**3/(d**4*r1**3) + 2*d_z*z_0/(d**4*r0) + (1/2)*d_z*z_0**3/(d**4*r0**3) - 1/2*k_x*k_z**2*l*r0**2*x_0/(d**4*r1**3) + k_x*l*x_0/(d**4*r1) - 2*k_x*l*x_0*z_0**2/(d**4*r1**3) - 1/2*k_y*k_z**2*l*r0**2*y_0/(d**4*r1**3) + k_y*l*y_0/(d**4*r1) - 2*k_y*l*y_0*z_0**2/(d**4*r1**3) - 1/2*k_z**3*l*r0**2*z_0/(d**4*r1**3) - 1/2*k_z**2*r0**4/(d**4*r1**3) + (1/2)*k_z**2*r0/d**4 + 3*k_z*l*r0**2*z_0/(d**4*r1**3) + k_z*l*z_0/(d**4*r1) - 2*k_z*l*z_0**3/(d**4*r1**3) - kr**2/(d**4*r1) - 1/2*kr**2*z_0**2/(d**4*r1**3) + kr**2/(d**4*r0) + (1/2)*kr**2*z_0**2/(d**4*r0**3) - kr*l/(d**4*r1) - 1/2*kr*l*z_0**2/(d**4*r1**3) + r0**2/(d**4*r1) + r0**2*z_0**2/(d**4*r1**3) - r0/d**4 - z_0**2/(d**4*r0) + 3*d_x*d_z**2*x_0/(d**6*r1) - 3*d_x*d_z**2*x_0/(d**6*r0) - 3*d_x*d_z*k_z*l*x_0/(d**6*r1) + 2*d_x*d_z*x_0*z_0/(d**6*r1) - 2*d_x*d_z*x_0*z_0/(d**6*r0) + d_x*k_z**2*r0**2*x_0/(d**6*r1) - d_x*k_z**2*r0*x_0/d**6 - d_x*k_z*l*x_0*z_0/(d**6*r1) - d_x*x_0*z_0**2/(d**6*r1) + d_x*x_0*z_0**2/(d**6*r0) + 3*d_y*d_z**2*y_0/(d**6*r1) - 3*d_y*d_z**2*y_0/(d**6*r0) - 3*d_y*d_z*k_z*l*y_0/(d**6*r1) + 2*d_y*d_z*y_0*z_0/(d**6*r1) - 2*d_y*d_z*y_0*z_0/(d**6*r0) + d_y*k_z**2*r0**2*y_0/(d**6*r1) - d_y*k_z**2*r0*y_0/d**6 - d_y*k_z*l*y_0*z_0/(d**6*r1) - d_y*y_0*z_0**2/(d**6*r1) + d_y*y_0*z_0**2/(d**6*r0) + d_z**3*kr/(d**6*r1) - d_z**3*kr/(d**6*r0) + d_z**3*l/(d**6*r1) + 3*d_z**3*z_0/(d**6*r1) - 3*d_z**3*z_0/(d**6*r0) - 3*d_z**2*k_z*l*z_0/(d**6*r1) - 3*d_z**2*k_z*r0**2/(d**6*r1) + 3*d_z**2*k_z*r0/d**6 + d_z**2*kr**2/(d**6*r1) - d_z**2*kr**2/(d**6*r0) + d_z**2*kr*l/(d**6*r1) + 6*d_z**2*kr*z_0/(d**6*r1) - 6*d_z**2*kr*z_0/(d**6*r0) + 6*d_z**2*l*z_0/(d**6*r1) + 2*d_z**2*z_0**2/(d**6*r1) - 2*d_z**2*z_0**2/(d**6*r0) - 4*d_z*k_x*l*x_0*z_0/(d**6*r1) - 4*d_z*k_y*l*y_0*z_0/(d**6*r1) + 3*d_z*k_z**2*l*r0**2/(d**6*r1) + d_z*k_z**2*r0**2*z_0/(d**6*r1) - d_z*k_z**2*r0*z_0/d**6 - 5*d_z*k_z*l*z_0**2/(d**6*r1) + 3*d_z*k_z*r0**2*z_0/(d**6*r1) - 3*d_z*k_z*r0*z_0/d**6 + 4*d_z*kr**2*z_0/(d**6*r1) - 4*d_z*kr**2*z_0/(d**6*r0) + 4*d_z*kr*l*z_0/(d**6*r1) - 3*d_z*kr*z_0**2/(d**6*r1) + 3*d_z*kr*z_0**2/(d**6*r0) - 3*d_z*l*z_0**2/(d**6*r1) - 6*d_z*r0**2*z_0/(d**6*r1) + 6*d_z*r0*z_0/d**6 - d_z*z_0**3/(d**6*r1) + d_z*z_0**3/(d**6*r0) - k_x*k_z**2*l*r0**2*x_0/(d**6*r1) - k_y*k_z**2*l*r0**2*y_0/(d**6*r1) - k_z**3*l*r0**2*z_0/(d**6*r1) - k_z**2*r0**4/(d**6*r1) + k_z**2*r0**3/d**6 + 2*k_z*l*r0**2*z_0/(d**6*r1) - kr**2*z_0**2/(d**6*r1) + kr**2*z_0**2/(d**6*r0) - kr*l*z_0**2/(d**6*r1) + 2*r0**2*z_0**2/(d**6*r1) - 2*r0*z_0**2/d**6
